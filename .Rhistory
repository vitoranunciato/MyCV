data %>%
count(data, main) -> data_df
data %>%
count(main) -> data_d
library(dplyr)
library(waffle)
library(wesanderson)
data %>%
count(data, main) -> data_df
data = read_excel("data/abstract.xlsx")
data %>%
count(data, main) -> data_df
data %>%
count(main) -> data_d
color = count(data_d)
ggplot(data_df, aes(fill = main, values = n)) +
geom_waffle(color = "white", size = .25, n_rows = 2, flip = TRUE) +
facet_wrap(~data, nrow = 1, strip.position = "bottom") +
scale_x_discrete() +
scale_y_continuous(limits = c(1:10))+
scale_fill_manual(values = wes_palette("BottleRocket1", n = 4))+
coord_equal() +
labs(
title = "Posters and oral presentation in scientific meetings",
subtitle = "One square:1 study",
x = "Year",
y = "Count"
) +
theme_classic(base_family = "Roboto Condensed") +
theme(panel.grid = element_blank(), axis.ticks.y = element_line(), panel.spacing.x=unit(0.01, "lines"), panel.spacing.y=unit(0.1, "lines")) +
guides(fill = guide_legend(reverse = TRUE))
ggplot(data_df, aes(fill = main, values = n)) +
geom_waffle(color = "white", size = .25, n_rows = 2, flip = TRUE) +
facet_wrap(~data, nrow = 1, strip.position = "bottom") +
scale_x_discrete() +
scale_y_continuous(limits = c(1:10))+
scale_fill_manual(values = wes_palette("BottleRocket1", n = 4))+
coord_equal() +
labs(
title = "Posters and oral presentation in scientific meetings",
subtitle = "One square:1 study",
x = "Year",
y = "Count"
) +
theme_classic(base_family = "Roboto Condensed") +
theme(panel.grid = element_blank(), axis.ticks.y = element_line(), panel.spacing.x=unit(0.01, "lines"), panel.spacing.y=unit(0.1, "lines")) +
guides(fill = guide_legend(reverse = TRUE))
ggplot(data_df, aes(fill = main, values = n)) +
geom_waffle(color = "white", size = .25, n_rows = 2, flip = TRUE) +
facet_wrap(~data, nrow = 1, strip.position = "bottom") +
scale_x_discrete() +
scale_y_continuous(limits = c(1:10))+
scale_fill_manual(values = wes_palette("BottleRocket1", n = 4))+
coord_equal() +
labs(
title = "Posters and oral presentation in scientific meetings",
subtitle = "One square:1 study",
x = "Year",
y = "Count"
) +
theme_classic(base_family = "Roboto Condensed") +
theme(panel.grid = element_blank(), axis.ticks.y = element_line(), panel.spacing.x=unit(0.01, "lines")) +
guides(fill = guide_legend(reverse = TRUE))
View(data_df)
ggplot(data_df, aes(fill = main, values = n)) +
geom_waffle(color = "white", size = .25, n_rows = 2, flip = TRUE) +
facet_wrap(~data, nrow = 1, strip.position = "bottom") +
scale_x_discrete() +
scale_y_continuous(limits = c(1:10))+
scale_fill_manual(values = wes_palette("GrandBudapest1", n = 3))+
coord_equal() +
labs(
title = "Posters and oral presentation in scientific meetings",
subtitle = "One square:1 study",
x = "Year",
y = "Count"
) +
theme_classic(base_family = "Roboto Condensed") +
theme(panel.grid = element_blank(), axis.ticks.y = element_line(), panel.spacing.x=unit(0.01, "lines")) +
guides(fill = guide_legend(reverse = TRUE))
ggplot(data_df, aes(fill = main, values = n)) +
geom_waffle(color = "white", size = .25, n_rows = 2, flip = TRUE) +
facet_wrap(~data, nrow = 1, strip.position = "bottom") +
scale_x_discrete() +
scale_y_continuous(limits = c(1:10))+
scale_fill_manual(values = wes_palette("GrandBudapest1", n = 4))+
coord_equal() +
labs(
title = "Posters and oral presentation in scientific meetings",
subtitle = "One square:1 study",
x = "Year",
y = "Count"
) +
theme_classic(base_family = "Roboto Condensed") +
theme(panel.grid = element_blank(), axis.ticks.y = element_line(), panel.spacing.x=unit(0.01, "lines")) +
guides(fill = guide_legend(reverse = TRUE))
data %>%
count(data, main) -> data_df
ggplot(data_df, aes(fill = main, values = n)) +
geom_waffle(color = "white", size = .25, n_rows = 2, flip = TRUE) +
facet_wrap(~data, nrow = 1, strip.position = "bottom") +
scale_x_discrete() +
scale_y_discrete(limits = c(1:10))+
scale_fill_grey(start = 0.2, end = 0.9)+
coord_equal() +
labs(
title = "Posters and oral presentation in scientific meetings",
subtitle = "One square:1 study",
x = "Year",
y = "Count"
) +
theme_classic(base_family = "Roboto Condensed") +
theme(panel.grid = element_blank(), axis.ticks.y = element_line(), panel.margin.x=unit(0.01, "lines"), panel.spacing.y=unit(0.1, "lines")) +
guides(fill = guide_legend(reverse = TRUE))
ggplot(data_df, aes(fill = main, values = n)) +
geom_waffle(color = "white", size = .25, n_rows = 2, flip = TRUE) +
facet_wrap(~data, nrow = 1, strip.position = "bottom") +
scale_x_discrete() +
scale_y_discrete(limits = c(1, 2, 5, 8, 10))+
scale_fill_grey(start = 0.2, end = 0.9)+
coord_equal() +
labs(
title = "Posters and oral presentation in scientific meetings",
subtitle = "One square:1 study",
x = "Year",
y = "Count"
) +
theme_classic(base_family = "Roboto Condensed") +
theme(panel.grid = element_blank(), axis.ticks.y = element_line(), panel.margin.x=unit(0.01, "lines"), panel.spacing.y=unit(0.1, "lines")) +
guides(fill = guide_legend(reverse = TRUE))
ggplot(data_df, aes(fill = main, values = n)) +
geom_waffle(color = "white", size = .25, n_rows = 2, flip = TRUE) +
facet_wrap(~data, nrow = 1, strip.position = "bottom") +
scale_x_discrete() +
scale_y_discrete(limits = c(1, 5, 8, 10))+
scale_fill_grey(start = 0.2, end = 0.9)+
coord_equal() +
labs(
title = "Posters and oral presentation in scientific meetings",
subtitle = "One square:1 study",
x = "Year",
y = "Count"
) +
theme_classic(base_family = "Roboto Condensed") +
theme(panel.grid = element_blank(), axis.ticks.y = element_line(), panel.margin.x=unit(0.01, "lines"), panel.spacing.y=unit(0.1, "lines")) +
guides(fill = guide_legend(reverse = TRUE))
ggplot(data_df, aes(fill = main, values = n)) +
geom_waffle(color = "white", size = .25, n_rows = 2, flip = TRUE) +
facet_wrap(~data, nrow = 1, strip.position = "bottom") +
scale_x_discrete() +
scale_y_discrete(limits = c(1, 3, 6, 9, 12))+
scale_fill_grey(start = 0.2, end = 0.9)+
coord_equal() +
labs(
title = "Posters and oral presentation in scientific meetings",
subtitle = "One square:1 study",
x = "Year",
y = "Count"
) +
theme_classic(base_family = "Roboto Condensed") +
theme(panel.grid = element_blank(), axis.ticks.y = element_line(), panel.margin.x=unit(0.01, "lines"), panel.spacing.y=unit(0.1, "lines")) +
guides(fill = guide_legend(reverse = TRUE))
ggplot(data_df, aes(fill = main, values = n)) +
geom_waffle(color = "white", size = .25, n_rows = 2, flip = TRUE) +
facet_wrap(~data, nrow = 1, strip.position = "bottom") +
scale_x_discrete() +
scale_y_discrete(limits = c(0, 2, 4, 6, 8, 10))+
scale_fill_grey(start = 0.2, end = 0.9)+
coord_equal() +
labs(
title = "Posters and oral presentation in scientific meetings",
subtitle = "One square:1 study",
x = "Year",
y = "Count"
) +
theme_classic(base_family = "Roboto Condensed") +
theme(panel.grid = element_blank(), axis.ticks.y = element_line(), panel.margin.x=unit(0.01, "lines"), panel.spacing.y=unit(0.1, "lines")) +
guides(fill = guide_legend(reverse = TRUE))
vals <- df$count
vals <- data_df$count
vals <- data_df$n
val_names <- sprintf("%s (%s)", df$main, scales::percent(round(df$n/sum(df$n), 2)))
val_names <- sprintf("%s (%s)", data_df$main, scales::percent(round(data_df$n/sum(data_df$n), 2)))
names(vals) <- val_names
val_names
val_names <- sprintf("%s (%s)", data$main, scales::percent(round(data_df$n/sum(data_df$n), 2)))
df = data %>%
group_by(main) %>%
count()
df = as.data.frame(df)
df = df %>%
rename(count = n)
vals <- df$count
val_names <- sprintf("%s (%s)", df$main, scales::percent(round(df$count/sum(df$count), 2)))
names(vals) <- val_names
ggplot(data_df, aes(fill = main, values = n)) +
geom_waffle(color = "white", size = .25, n_rows = 2, flip = TRUE) +
facet_wrap(~data, nrow = 1, strip.position = "bottom") +
scale_x_discrete() +
scale_y_discrete(limits = c(0, 2, 4, 6, 8, 10))+
scale_fill_grey(start = 0.2, end = 0.9, name = "Dose", labels = c("A", "B", "C", "D"))+
coord_equal() +
labs(
title = "Posters and oral presentation in scientific meetings",
subtitle = "One square:1 study",
x = "Year",
y = "Count",
fill = "Dose (mg)"
) +
theme_classic(base_family = "Roboto Condensed") +
theme(panel.grid = element_blank(), axis.ticks.y = element_line(), panel.margin.x=unit(0.01, "lines"), panel.spacing.y=unit(0.1, "lines")) +
guides(fill = guide_legend(reverse = TRUE))
ggplot(data_df, aes(fill = main, values = n)) +
geom_waffle(color = "white", size = .25, n_rows = 2, flip = TRUE) +
facet_wrap(~data, nrow = 1, strip.position = "bottom") +
scale_x_discrete() +
scale_y_discrete(limits = c(0, 2, 4, 6, 8, 10))+
scale_fill_grey(start = 0.2, end = 0.9, name = "Dose", labels = val_names)+
coord_equal() +
labs(
title = "Posters and oral presentation in scientific meetings",
subtitle = "One square:1 study",
x = "Year",
y = "Count",
fill = "Dose (mg)"
) +
theme_classic(base_family = "Roboto Condensed") +
theme(panel.grid = element_blank(), axis.ticks.y = element_line(), panel.margin.x=unit(0.01, "lines"), panel.spacing.y=unit(0.1, "lines")) +
guides(fill = guide_legend(reverse = TRUE))
ggplot(data_df, aes(fill = main, values = n)) +
geom_waffle(color = "white", size = .25, n_rows = 2, flip = TRUE) +
facet_wrap(~data, nrow = 1, strip.position = "bottom") +
scale_x_discrete() +
scale_y_discrete(limits = c(0, 2, 4, 6, 8, 10))+
scale_fill_grey(start = 0.2, end = 0.9, labels = val_names)+
coord_equal() +
labs(
title = "Posters and oral presentation in scientific meetings",
subtitle = "One square:1 study",
x = "Year",
y = "Count",
fill = "Main topic of publication"
) +
theme_classic(base_family = "Roboto Condensed") +
theme(panel.grid = element_blank(), axis.ticks.y = element_line(), panel.margin.x=unit(0.01, "lines"), panel.spacing.y=unit(0.1, "lines")) +
guides(fill = guide_legend(reverse = TRUE))
ggplot(data_df, aes(fill = main, values = n)) +
geom_waffle(color = "white", size = .25, n_rows = 2, flip = TRUE) +
facet_wrap(~data, nrow = 1, strip.position = "bottom") +
scale_x_discrete() +
scale_y_discrete(limits = c(0, 2, 4, 6, 8, 10))+
scale_fill_grey(start = 0.2, end = 0.9, labels = val_names)+
coord_equal() +
labs(
title = "Posters and oral presentation in scientific meetings",
subtitle = "One square:1 study",
x = "Year",
y = "Count",
fill = "Main topic of publication",
caption = "(%) in legends, represents the percentage of the theme relative to the total of publications"
) +
theme_classic(base_family = "Roboto Condensed") +
theme(panel.grid = element_blank(), axis.ticks.y = element_line(), panel.margin.x=unit(0.01, "lines"), panel.spacing.y=unit(0.1, "lines")) +
guides(fill = guide_legend(reverse = TRUE))
ggplot(data_df, aes(fill = main, values = n)) +
geom_waffle(color = "white", size = .25, n_rows = 2, flip = TRUE) +
facet_wrap(~data, nrow = 1, strip.position = "bottom") +
scale_x_discrete() +
scale_y_discrete(limits = c(0, 2, 4, 6, 8, 10))+
scale_fill_grey(start = 0.2, end = 0.9, labels = val_names)+
coord_equal() +
labs(
title = "Posters and oral presentation in scientific meetings",
subtitle = "One square:1 study",
x = "Year",
y = "Count",
fill = "Main topic of publication",
caption = "(%) in legends, represents the percentage of the theme relative to the total of publications."
) +
theme_minimal(base_family = "Roboto Condensed") +
theme(panel.grid = element_blank(), axis.ticks.y = element_line(), panel.margin.x=unit(0.01, "lines"), panel.spacing.y=unit(0.1, "lines")) +
guides(fill = guide_legend(reverse = TRUE))
library(tidyverse)
library(waffle)
library(extrafont)
library(readxl)
library(ggthemes)
data = read_excel("data/abstract.xlsx")
data %>%
count(data, main) -> data_df
df = data %>%
group_by(main) %>%
count()
df = as.data.frame(df)
df = df %>%
rename(count = n)
vals <- df$count
val_names <- sprintf("%s (%s)", df$main, scales::percent(round(df$count/sum(df$count), 2)))
names(vals) <- val_names
ggplot(data_df, aes(fill = main, values = n)) +
geom_waffle(color = "white", size = .25, n_rows = 2, flip = TRUE) +
facet_wrap(~data, nrow = 1, strip.position = "bottom") +
scale_x_discrete() +
scale_y_discrete(limits = c(0, 2, 4, 6, 8, 10))+
scale_fill_grey(start = 0.2, end = 0.9, labels = val_names)+
coord_equal() +
labs(
title = "Posters and oral presentation in scientific meetings",
subtitle = "One square:1 study",
x = "Year",
y = "Count",
fill = "Main topic of publication",
caption = "(%) in legends, represents the percentage of the theme relative to the total of publications."
) +
theme_minimal(base_family = "Roboto Condensed") +
theme(panel.grid = element_blank(), axis.ticks.y = element_line(), panel.margin.x=unit(0.01, "lines"), panel.spacing.y=unit(0.1, "lines")) +
guides(fill = guide_legend(reverse = TRUE))
library(readxl)
Cotton_Inc_Report <- read_excel("D:/Zaim Stat/Cotton Inc  Report.xlsx",
sheet = "r")
View(Cotton_Inc_Report)
library(knitr)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(vitae)
library(tidyverse)
library(ezpickr)
library(tidyverse)
library(waffle)
library(extrafont)
library(readxl)
library(ggthemes)
data = read_excel("data/abstract.xlsx")
data %>%
count(data, main) -> data_df
df = data %>%
group_by(main) %>%
count()
df = as.data.frame(df)
df = df %>%
rename(count = n)
vals <- df$count
val_names <- sprintf("%s (%s)", df$main, scales::percent(round(df$count/sum(df$count), 2)))
names(vals) <- val_names
ggplot(data_df, aes(fill = main, values = n)) +
geom_waffle(color = "white", size = .25, n_rows = 2, flip = TRUE) +
facet_wrap(~data, nrow = 1, strip.position = "bottom") +
scale_x_discrete() +
scale_y_discrete(limits = c(0, 2, 4, 6, 8, 10))+
scale_fill_grey(start = 0.2, end = 0.9, labels = val_names)+
coord_equal() +
labs(
title = "Posters and oral presentation in scientific meetings",
subtitle = "One square:one study",
x = "Year",
y = "Count",
fill = "Main topic of studies",
caption = "(%) in legends, represents the percentage of the theme relative to the total of publications."
) +
theme_minimal(base_family = "Roboto Condensed") +
theme(panel.grid = element_blank(), axis.ticks.y = element_line(), panel.margin.x=unit(0.01, "lines"), panel.spacing.y=unit(0.1, "lines")) +
guides(fill = guide_legend(reverse = TRUE))
data = read_excel("data/outreach.xlsx")
data %>%
count(data, main) -> data_df
df = data %>%
group_by(main) %>%
count()
df = as.data.frame(df)
df = df %>%
rename(count = n)
vals <- df$count
val_names <- sprintf("%s (%s)", df$main, scales::percent(round(df$count/sum(df$count), 2)))
names(vals) <- val_names
ggplot(data_df, aes(fill = main, values = n)) +
geom_waffle(color = "white", size = .25, n_rows = 2, flip = TRUE) +
facet_wrap(~data, nrow = 1, strip.position = "bottom") +
scale_x_discrete() +
scale_y_discrete(limits = c(0, 2, 4, 6, 8, 10))+
scale_fill_grey(start = 0.2, end = 0.9, labels = val_names)+
coord_equal() +
labs(
title = "Extention publications",
subtitle = "One square:one extension publication",
x = "Year",
y = "Count",
fill = "Main topic of extension publication",
caption = "(%) represents the % of the theme relative to the total of publications."
) +
theme_minimal() +
theme(panel.grid = element_blank(), axis.ticks.y = element_line(), panel.spacing.x=unit(0.01, "lines"), text=element_text(family="Roboto")) +
guides(fill = guide_legend(reverse = TRUE))
data = read_excel("data/outreach.xlsx")
data %>%
count(data, main) -> data_df
df = data %>%
group_by(main) %>%
count()
df = as.data.frame(df)
df = df %>%
rename(count = n)
vals <- df$count
val_names <- sprintf("%s (%s)", df$main, scales::percent(round(df$count/sum(df$count), 2)))
names(vals) <- val_names
ggplot(data_df, aes(fill = main, values = n)) +
geom_waffle(color = "white", size = .25, n_rows = 2, flip = TRUE) +
facet_wrap(~data, nrow = 1, strip.position = "bottom") +
scale_x_discrete() +
scale_y_discrete(limits = c(0, 2, 4, 6, 8, 10))+
scale_fill_grey(start = 0.2, end = 0.9, labels = val_names)+
coord_equal() +
labs(
title = "Extention publications",
subtitle = "One square:one extension publication",
x = "Year",
y = "Count",
fill = "Main topic of extension publication",
caption = "(%) represents the % of the theme relative to the total of publications."
) +
theme_minimal() +
theme_roboto()+
theme(panel.grid = element_blank(), axis.ticks.y = element_line(), panel.spacing.x=unit(0.01, "lines")) +
guides(fill = guide_legend(reverse = TRUE))
data = read_excel("data/outreach.xlsx")
data %>%
count(data, main) -> data_df
df = data %>%
group_by(main) %>%
count()
df = as.data.frame(df)
df = df %>%
rename(count = n)
vals <- df$count
val_names <- sprintf("%s (%s)", df$main, scales::percent(round(df$count/sum(df$count), 2)))
names(vals) <- val_names
ggplot(data_df, aes(fill = main, values = n)) +
geom_waffle(color = "white", size = .25, n_rows = 2, flip = TRUE) +
facet_wrap(~data, nrow = 1, strip.position = "bottom") +
scale_x_discrete() +
scale_y_discrete(limits = c(0, 2, 4, 6, 8, 10))+
scale_fill_grey(start = 0.2, end = 0.9, labels = val_names)+
coord_equal() +
labs(
title = "Extention publications",
subtitle = "One square:one extension publication",
x = "Year",
y = "Count",
fill = "Main topic of extension publication",
caption = "(%) represents the % of the theme relative to the total of publications."
) +
theme_minimal() +
theme(panel.grid = element_blank(), axis.ticks.y = element_line(), panel.spacing.x=unit(0.01, "lines")) +
guides(fill = guide_legend(reverse = TRUE))
data = read_excel("data/outreach.xlsx")
data %>%
count(data, main) -> data_df
df = data %>%
group_by(main) %>%
count()
df = as.data.frame(df)
df = df %>%
rename(count = n)
vals <- df$count
val_names <- sprintf("%s (%s)", df$main, scales::percent(round(df$count/sum(df$count), 2)))
names(vals) <- val_names
ggplot(data_df, aes(fill = main, values = n)) +
geom_waffle(color = "white", size = .25, n_rows = 2, flip = TRUE) +
facet_wrap(~data, nrow = 1, strip.position = "bottom") +
scale_x_discrete() +
scale_y_discrete(limits = c(0, 2, 4, 6, 8))+
scale_fill_grey(start = 0.2, end = 0.9, labels = val_names)+
coord_equal() +
labs(
title = "Extention publications",
subtitle = "One square:one extension publication",
x = "Year",
y = "Count",
fill = "Main topic of extension publication",
caption = "(%) represents the % of the theme relative to the total of publications."
) +
theme_minimal() +
theme(panel.grid = element_blank(), axis.ticks.y = element_line(), panel.spacing.x=unit(0.01, "lines")) +
guides(fill = guide_legend(reverse = TRUE))
data = read_excel("data/outreach.xlsx")
data %>%
count(data, main) -> data_df
df = data %>%
group_by(main) %>%
count()
df = as.data.frame(df)
df = df %>%
rename(count = n)
vals <- df$count
val_names <- sprintf("%s (%s)", df$main, scales::percent(round(df$count/sum(df$count), 2)))
names(vals) <- val_names
ggplot(data_df, aes(fill = main, values = n)) +
geom_waffle(color = "white", size = .25, n_rows = 2, flip = TRUE) +
facet_wrap(~data, nrow = 1, strip.position = "bottom") +
scale_x_discrete() +
scale_y_discrete(limits = c(0, 2, 4, 6))+
scale_fill_grey(start = 0.2, end = 0.9, labels = val_names)+
coord_equal() +
labs(
title = "Extention publications",
subtitle = "One square:one extension publication",
x = "Year",
y = "Count",
fill = "Main topic of extension publication",
caption = "(%) represents the % of the theme relative to the total of publications."
) +
theme_minimal() +
theme(panel.grid = element_blank(), axis.ticks.y = element_line(), panel.spacing.x=unit(0.01, "lines")) +
guides(fill = guide_legend(reverse = TRUE))
